---
- hosts: local
  become: yes
  become_user: alfred

  vars_files:
    - '/etc/ansible/alfred-vars.yml'

  vars:
    plugin_virtualenv_path: "{{ alfred.home }}/virtualenv/{{ plugin_name }}"
    plugin_content_path: "{{ alfred.home }}/plugins/{{ plugin_name }}"
    plugin_host_specific_playbook: "{{ plugin_content_path }}/plugin/install.playbook.yml"
    plugin_var_file: "{{ alfred.home }}/plugins/{{ plugin_name }}/plugin/plugin-vars.yml"

  tasks:
    - name: scan for plugin vars
      stat:
        path="{{ plugin_var_file }}"
      register: plugin_vars

    - include_vars: "{{ plugin_var_file }}"
      when: plugin_vars.stat.exists

    - name: plugin dedicated virtualenv is ready
      shell: "virtualenv {{ plugin_virtualenv_path }}"
      args:
        creates: "{{ plugin_virtualenv_path }}"

    - name: python dependencies are installed in dedicated virtualenv
      when: alfred_plugin is defined and alfred_plugin.pip_packages is defined
      pip:
        name="{{ item }}"
        virtualenv="{{ plugin_virtualenv_path }}"
        state='latest'
      with_items: "{{ alfred_plugin.pip_packages }}"

    - name: scan for plugin installer playbook
      stat:
        path="{{ plugin_host_specific_playbook }}"
      register: plugin_playbook

    - include: "{{ plugin_host_specific_playbook }}"
      when: plugin_playbook.stat.exists

  handlers:
    - name: service is enabled
      become_user: root
      service:
        name="{{ plugin_name }}"
        state=restarted
        enabled=yes